/*
Given an array arr[] containing only non-negative integers,
your task is to find a continuous subarray (a contiguous sequence of elements)
whose sum equals a specified value target. 
You need to return the 1-based indices of the leftmost and 
rightmost elements of this subarray. You need to find the first subarray whose sum is equal to the target.

Note: If no such array is possible then, return [-1].

Input: arr[] = [1, 2, 3, 7, 5], target = 12
Output: [2, 4]
Explanation: The sum of elements from 2nd to 4th position is 12

*/

class IndexsOfSubArray {
    public static void main(String args[]){
      int[] arr={1,2,3,7,5};
      int target=12;
      ArrayList<Integer> result=new ArrayList<>();
      result=subarraySum(arr,target);
      System.out.println(result);
    }
    static ArrayList<Integer> subarraySum(int[] arr, int target) {
        // code here
        ArrayList<Integer> result=new ArrayList<>();
        int start=0,total=0;
        for(int i=0;i<arr.length;i++){
            total+=arr[i];
            while(total>=target){
                if(total==target){
                    result.add(start+1);
                    result.add(i+1);
                    return result;
                }
                total-=arr[start];
                start++;
            }
        }
        result.add(-1);
        return result;
    }
}
